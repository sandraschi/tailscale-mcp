{
  "manifest_version": "0.2",
  "name": "tailscale-mcp",
  "version": "2.0.0",
  "description": "Comprehensive Tailscale MCP server with 12 portmanteau tools and 91+ operations",
  "long_description": "Professional Tailscale MCP server providing comprehensive network management, monitoring, and automation capabilities. Features 12 portmanteau tools covering device management, network operations, monitoring, file sharing, security, automation, backup, performance, reporting, integrations, help system, and status monitoring.",
  "author": {
    "name": "Sandra Schi",
    "email": "sandra@sandraschi.dev",
    "url": "https://github.com/sandraschi"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/sandraschi/tailscale-mcp"
  },
  "homepage": "https://github.com/sandraschi/tailscale-mcp",
  "documentation": "https://github.com/sandraschi/tailscale-mcp/blob/main/README.md",
  "support": "https://github.com/sandraschi/tailscale-mcp/issues",
  "license": "MIT",
  "keywords": ["tailscale", "mcp", "network", "vpn", "management", "monitoring", "grafana", "automation", "portmanteau"],
  "icon": "assets/icon.png",
  "screenshots": [
    "assets/screenshots/portmanteau-tools.png",
    "assets/screenshots/grafana-dashboard.png",
    "assets/screenshots/monitoring-overview.png"
  ],
  "server": {
    "type": "python",
    "entry_point": "src/tailscalemcp/__main__.py",
    "mcp_config": {
      "command": "python",
      "args": ["-m", "tailscalemcp"],
      "env": {
        "PYTHONPATH": "src",
        "TAILSCALE_API_KEY": "${user_config.api_key}",
        "TAILSCALE_TAILNET": "${user_config.tailnet}",
        "DEBUG_MODE": "${user_config.debug_mode}",
        "PYTHONUNBUFFERED": "1"
      }
    }
  },
  "user_config": {
    "api_key": {
      "type": "string",
      "title": "Tailscale API Key",
      "description": "Your Tailscale API key from https://login.tailscale.com/admin/settings/keys",
      "sensitive": true,
      "required": true,
      "placeholder": "tskey-api-xxxxxxxxxxxxx"
    },
    "tailnet": {
      "type": "string",
      "title": "Tailnet ID",
      "description": "Your Tailscale tailnet ID (found in your admin console URL)",
      "required": true,
      "placeholder": "TkEvDCMcjR11CNTRL"
    },
    "debug_mode": {
      "type": "boolean",
      "title": "Debug Mode",
      "description": "Enable detailed logging for troubleshooting",
      "required": false,
      "default": false
    }
  },
  "tools": [
    {
      "name": "tailscale_device",
      "description": "Comprehensive device management (15 operations): list, get, authorize, rename, tag, SSH, search, stats, exit nodes, subnet routing, user management, auth keys"
    },
    {
      "name": "tailscale_network",
      "description": "DNS and network management (9 operations): MagicDNS, DNS records, resolution, policies, statistics"
    },
    {
      "name": "tailscale_monitor",
      "description": "Monitoring and metrics (6 operations): status, Prometheus metrics, topology, health reports, Grafana dashboards"
    },
    {
      "name": "tailscale_file",
      "description": "File sharing via Taildrop (6 operations): send, receive, transfer management, statistics"
    },
    {
      "name": "tailscale_security",
      "description": "Security and compliance (8 operations): scanning, auditing, threat detection, policy management, alerting"
    },
    {
      "name": "tailscale_automation",
      "description": "Workflow automation (6 operations): workflows, scripts, batch operations, scheduling"
    },
    {
      "name": "tailscale_backup",
      "description": "Backup and disaster recovery (6 operations): backup creation, restoration, scheduling, testing"
    },
    {
      "name": "tailscale_performance",
      "description": "Performance monitoring (6 operations): latency, bandwidth, optimization, capacity planning"
    },
    {
      "name": "tailscale_reporting",
      "description": "Advanced reporting (6 operations): custom reports, analytics, scheduling, export"
    },
    {
      "name": "tailscale_integration",
      "description": "Third-party integrations (6 operations): webhooks, Slack, Discord, PagerDuty, Datadog"
    },
    {
      "name": "tailscale_help",
      "description": "Comprehensive multilevel help system (4 topics): overview, examples, best_practices, troubleshooting with basic/intermediate/advanced/expert levels"
    },
    {
      "name": "tailscale_status",
      "description": "System status and health monitoring (7 components): overview, devices, network, services, metrics, alerts, health with basic/intermediate/advanced/diagnostic levels"
    }
  ],
  "prompts": [
    {
      "name": "device_list_online",
      "description": "List all online Tailscale devices with filtering options",
      "arguments": ["filter_tags", "search_query"],
      "text": "List all online Tailscale devices${arguments.filter_tags ? ' filtered by tags: ' + arguments.filter_tags : ''}${arguments.search_query ? ' matching search: ' + arguments.search_query : ''}. Provide detailed device information including status, IP addresses, last seen, and any relevant metadata."
    },
    {
      "name": "device_authorize",
      "description": "Authorize or revoke device access with reason",
      "arguments": ["device_id", "authorize", "reason"],
      "text": "${arguments.authorize ? 'Authorize' : 'Revoke'} access for Tailscale device ${arguments.device_id}${arguments.reason ? ' with reason: ' + arguments.reason : ''}. Provide confirmation and updated device status."
    },
    {
      "name": "device_rename_tag",
      "description": "Rename device and manage tags",
      "arguments": ["device_id", "new_name", "tags"],
      "text": "Rename Tailscale device ${arguments.device_id} to '${arguments.new_name}'${arguments.tags ? ' and update tags to: ' + arguments.tags : ''}. Provide confirmation and updated device information."
    },
    {
      "name": "network_dns_configure",
      "description": "Configure MagicDNS and DNS records",
      "arguments": ["operation", "domain", "records"],
      "text": "Configure Tailscale MagicDNS with ${arguments.operation} for domain ${arguments.domain}${arguments.records ? ' and DNS records: ' + arguments.records : ''}. Provide configuration status and DNS resolution details."
    },
    {
      "name": "monitoring_dashboard",
      "description": "Create Grafana monitoring dashboard",
      "arguments": ["dashboard_type", "timeframe", "metrics"],
      "text": "Create Grafana dashboard of type '${arguments.dashboard_type}' for ${arguments.timeframe} monitoring with focus on ${arguments.metrics}. Provide dashboard configuration and monitoring insights."
    },
    {
      "name": "monitoring_health_check",
      "description": "Perform comprehensive network health check",
      "arguments": ["timeframe", "include_devices", "include_network"],
      "text": "Perform comprehensive Tailscale network health check for ${arguments.timeframe}${arguments.include_devices ? ' including device status' : ''}${arguments.include_network ? ' and network connectivity' : ''}. Provide health score, issues found, and recommendations."
    },
    {
      "name": "file_transfer_send",
      "description": "Send file via Taildrop to specific device",
      "arguments": ["file_path", "recipient_device", "expire_hours"],
      "text": "Send file '${arguments.file_path}' to Tailscale device ${arguments.recipient_device} via Taildrop with ${arguments.expire_hours} hour expiry. Provide transfer status and confirmation details."
    },
    {
      "name": "security_scan_comprehensive",
      "description": "Run comprehensive security scan",
      "arguments": ["scan_type", "compliance_standard", "device_filter"],
      "text": "Run ${arguments.scan_type} security scan with ${arguments.compliance_standard} compliance${arguments.device_filter ? ' filtered to: ' + arguments.device_filter : ''}. Provide security assessment, vulnerabilities found, and remediation recommendations."
    },
    {
      "name": "automation_workflow_create",
      "description": "Create automation workflow",
      "arguments": ["workflow_name", "trigger", "actions"],
      "text": "Create automation workflow '${arguments.workflow_name}' with trigger '${arguments.trigger}' and actions: ${arguments.actions}. Provide workflow configuration and execution plan."
    },
    {
      "name": "backup_create_schedule",
      "description": "Create and schedule configuration backup",
      "arguments": ["backup_name", "schedule", "retention"],
      "text": "Create configuration backup '${arguments.backup_name}' with schedule '${arguments.schedule}' and retention '${arguments.retention}'. Provide backup details and schedule confirmation."
    },
    {
      "name": "performance_optimization",
      "description": "Analyze and optimize network performance",
      "arguments": ["analysis_type", "timeframe", "optimization_target"],
      "text": "Perform ${arguments.analysis_type} performance analysis for ${arguments.timeframe} with optimization target '${arguments.optimization_target}'. Provide performance metrics, bottlenecks identified, and optimization recommendations."
    },
    {
      "name": "reporting_generate_custom",
      "description": "Generate custom report with specific metrics",
      "arguments": ["report_type", "timeframe", "metrics", "format"],
      "text": "Generate ${arguments.report_type} report for ${arguments.timeframe} with metrics: ${arguments.metrics} in ${arguments.format} format. Provide report summary and key findings."
    },
    {
      "name": "integration_webhook_setup",
      "description": "Set up webhook integration",
      "arguments": ["webhook_url", "events", "secret"],
      "text": "Set up webhook integration with URL '${arguments.webhook_url}' for events: ${arguments.events}${arguments.secret ? ' with secret authentication' : ''}. Provide integration status and test results."
    },
    {
      "name": "help_system_overview",
      "description": "Get comprehensive help system overview",
      "arguments": ["level", "category"],
      "text": "Provide ${arguments.level} level help overview${arguments.category ? ' for category: ' + arguments.category : ''}. Include available tools, operations, usage examples, and best practices."
    },
    {
      "name": "status_system_health",
      "description": "Check comprehensive system status and health",
      "arguments": ["component", "detail_level", "include_metrics"],
      "text": "Check ${arguments.component} system status with ${arguments.detail_level} detail level${arguments.include_metrics ? ' including performance metrics' : ''}. Provide health assessment, issues found, and system recommendations."
    },
    {
      "name": "troubleshooting_connection_issues",
      "description": "Troubleshoot Tailscale connection problems",
      "arguments": ["device_id", "issue_type", "timeframe"],
      "text": "Troubleshoot ${arguments.issue_type} connection issues for device ${arguments.device_id} over ${arguments.timeframe}. Provide diagnostic steps, root cause analysis, and resolution recommendations."
    },
    {
      "name": "bulk_device_operations",
      "description": "Perform bulk operations on multiple devices",
      "arguments": ["operation", "device_filter", "batch_size"],
      "text": "Perform ${arguments.operation} on devices matching filter '${arguments.device_filter}' in batches of ${arguments.batch_size}. Provide progress updates and operation results."
    },
    {
      "name": "network_policy_management",
      "description": "Create and manage network access policies",
      "arguments": ["policy_name", "rules", "priority"],
      "text": "Create network policy '${arguments.policy_name}' with rules: ${arguments.arguments.rules} and priority ${arguments.priority}. Provide policy configuration and access control details."
    },
    {
      "name": "alerting_setup_monitoring",
      "description": "Set up monitoring alerts and notifications",
      "arguments": ["alert_type", "thresholds", "notification_channels"],
      "text": "Set up ${arguments.alert_type} monitoring alerts with thresholds: ${arguments.thresholds} and notification channels: ${arguments.notification_channels}. Provide alert configuration and test results."
    },
    {
      "name": "capacity_planning_analysis",
      "description": "Analyze network capacity and scaling requirements",
      "arguments": ["timeframe", "growth_rate", "scaling_factor"],
      "text": "Perform capacity planning analysis for ${arguments.timeframe} with growth rate ${arguments.growth_rate} and scaling factor ${arguments.scaling_factor}. Provide capacity projections and scaling recommendations."
    }
  ],
  "tools_generated": true,
  "prompts_generated": false,
  "compatibility": {
    "platforms": ["win32", "darwin", "linux"],
    "python_version": ">=3.10"
  }
}