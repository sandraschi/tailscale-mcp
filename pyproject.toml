[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "tailscalemcp"
version = "2.0.0"
description = "FastMCP 2.12 compliant Tailscale network controller"
readme = "README.md"
authors = [
    { name = "Your Name", email = "your.email@example.com" },
]
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: System :: Networking",
    "Topic :: System :: Systems Administration",
]
dependencies = [
    "fastmcp>=2.12.0",
    "pydantic>=2.0.0",
    "httpx>=0.25.0",
    "python-dotenv>=1.0.0",
    "structlog>=23.0.0",
    "prometheus-client>=0.19.0",
    "grafana-api>=1.0.3",
    "psutil>=5.9.0",
    "aiohttp>=3.9.0",
    "plotly>=5.17.0",
    "dash>=2.14.0",
    "dash-bootstrap-components>=1.5.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.12.0",
    "ruff>=0.1.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
    "types-requests>=2.32.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/tailscalemcp"
Documentation = "https://github.com/yourusername/tailscalemcp#readme"
Issues = "https://github.com/yourusername/tailscalemcp/issues"
Source = "https://github.com/yourusername/tailscalemcp"

[tool.setuptools.packages.find]
where = ["src"]
include = ["tailscalemcp*"]

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "ARG001", # unused-function-args
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "Q",  # flake8-quotes
    "RUF", # ruff-specific rules
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint.isort]
known-first-party = ["tailscalemcp"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
disallow_incomplete_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
show_error_codes = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
asyncio_mode = "auto"
addopts = [
    "-v",
    "--cov=tailscalemcp",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=24",
    "--strict-markers",
    "--strict-config",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["tailscalemcp"]
omit = [
    "tests/*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
show_missing = true
skip_covered = true
fail_under = 80
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "coverage_html"

[tool.coverage.xml]
output = "coverage.xml"

# MCPB Packaging Configuration
[tool.mcpb]
name = "tailscalemcp"
version = "2.0.0"
description = "FastMCP 2.12 compliant Tailscale network controller"
author = "Your Name"
author_email = "your.email@example.com"
license = "MIT"
homepage = "https://github.com/yourusername/tailscalemcp"
repository = "https://github.com/yourusername/tailscalemcp"
documentation = "https://github.com/yourusername/tailscalemcp#readme"
keywords = ["tailscale", "mcp", "networking", "fastmcp"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: System :: Networking",
    "Topic :: System :: Systems Administration",
]
